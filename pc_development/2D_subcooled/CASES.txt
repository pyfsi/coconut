Differences between Faden cases:
    - Faden_try1: 'outflow' outlet left (outdated --> solved with old solid source term (CST = 10^8))
    - Faden_try2: 'outflow' outlet top (outdated --> solved with old solid source term (CST = 10^8))
    - Faden_try3: 'p-outlet with flow reversal prevented' top
    - Faden_try4: outlet as wall
    - Faden_try5: 'outflow' on top
    - Faden_try6: 'p-outlet with target mass flow rate' top
    - Faden_try7: 'mass-flow-outlet from named expression' top --> based on UDM V_swept
    - Faden_try8: outlet pipe on top to minimise impact on flow field (exit is normal pressure-outlet)
    - Faden_try9: outlet pipe double as long (exit is normal pressure-outlet) --> too narrow, too high flow velocities
    - Faden_try10: 'mass-flow-outlet from named expression' top --> based on Dynamic cell volume change + Boussinesq approx. at single rho_l
    - Faden_try11: 'mass-flow-outlet from named expression' side --> based on Dynamic cell volume change + Boussinesq approx. at single rho_l

Faden_full cases:
    - Case 1: (based on try5) outflow BC on top, top and bottom walls defined as plane in dynamic mesh settings
    - Case 2: (based on try3) 'p-outlet with flow reversal prevented' on top, top and bottom walls defined as plane in dynamic mesh settings
    - Case 3: case 2, but:
        - exclude mesh motion in boundary conditions? no for solids at top & bottom boundary!!! --> improves solid solver a lot!!!
    - Case 4: With liquid hf update each coupling iteration!!!
    - Case 5: case 4 with explicit coupling --> good results, but crashed after 12500 time steps
    - Case 6: case 5 except: ts = 0.05 s instead of 0.1 s and pressure interpolation = body force weighted (cfr convection currents) instead of PRESTO!
    - Case 7: case 6 except normal pressure outlet for stability

OBSERVATION: no difference between pressure outlet with and without reverse flow prevented
--> normal p-out is much more stable -> take this

PROBLEM: Case 4, 6 & 7 crash around t = 1100 s due to stretched interface faces
--> see max_face_area.py script
--> grid refinement: 4x more faces at interface (800 vs 200 faces)
--> case 8 (based on case 7 -> no flow reversal prevention)

    - case 8: refined grid at LF = 0.01 (var. density + normal p-out)
    - case 9: refined grid at LF = 0.01 (cst. liquid density + Boussinesq + normal p-out) --> even worse
    - case 10: refined grid at LF = 0.01 + rho_l = rho_s + Boussinesq + NO outlet --> stopped, melts too fast
    - case 11 & 13: Case 8, but grid at LF = 0.02 and double outlet size
    - case 12: case 10, but corrected latent heat to make up for density loss in solid --> melts slower --> CRASH
    - case 14: case 13, but with methods-based remeshing instead of unified (ts = 0.05 s)
    - case 15: case 13, but with ts = 0.01 s
    - case 16: case 14, but with ts = 0.1 s
